
---
# Source: horovod/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: punk-lemur-horovod
  labels:
    heritage: "Tiller"
    release: "punk-lemur"
    chart: horovod-0.2.0
    app: punk-lemur-horovod
data:
  hostfile.config: |
    punk-lemur-horovod-master slots=1
    punk-lemur-horovod-0.punk-lemur-horovod slots=1
    punk-lemur-horovod-1.punk-lemur-horovod slots=1
    punk-lemur-horovod-2.punk-lemur-horovod slots=1
  ssh.readiness: |
    #!/bin/bash
    set -xev
    ssh localhost ls
  master.run: |
     #!/bin/bash
     set -x
     sleep 5

     mkdir -p /root/.ssh
     rm -f /root/.ssh/config
     touch /root/.ssh/config

     if [ "$USESECRETS" == "true" ];then
        set +e
        yes | cp /etc/secret-volume/id_rsa /root/.ssh/id_rsa
        yes | cp /etc/secret-volume/authorized_keys /root/.ssh/authorized_keys
        set -e
     fi

     if [ -n "$SSHPORT" ]; then
        echo "Port $SSHPORT" > /root/.ssh/config
        sed -i "s/^Port.*/Port $SSHPORT /g" /etc/ssh/sshd_config
     fi
     echo "StrictHostKeyChecking no" >> /root/.ssh/config
     /usr/sbin/sshd

     if [ $# -eq 0 ]; then
          sleep infinity
        else
          bash -c "$*"
     fi
  master.waitWorkerReady: |
    #!/bin/bash
    set -xev
    function updateSSHPort() {
      mkdir -p /root/.ssh
      rm -f /root/.ssh/config
      touch /root/.ssh/config

      if [ -n "$SSHPORT" ]; then
        echo "Port $SSHPORT" > /root/.ssh/config
        echo "StrictHostKeyChecking no" >> /root/.ssh/config
      fi
    }

    function runCheckSSH() {
      if [[ "$USESECRETS" == "true" ]];then
        set +e
        yes | cp /etc/secret-volume/id_rsa /root/.ssh/id_rsa
        yes | cp /etc/secret-volume/authorized_keys /root/.ssh/authorized_keys
        set -e
      fi
      
      for i in `cat $1 | awk '{print $(1)}'`;do
        if [[ "$i" != *"master" ]];then
          retry 30 ssh -o ConnectTimeout=2 -q $i exit
        fi
      done
    }

    function retry()
    {
        local n=0;local try=$1
        local cmd="${@: 2}"
        [[ $# -le 1 ]] && {
            echo "Usage $0 <retry_number> <Command>";
        }
        set +e
        until [[ $n -ge $try ]]
        do
          $cmd && break || {
                  echo "Command Fail.."
                  ((n++))
                  echo "retry $n :: [$cmd]"
                  sleep 1;
                  }
        done
        $cmd
        if [ $? -ne 0 ]; then
          exit 1
        fi
        set -e   
    }
    updateSSHPort
    runCheckSSH $1
  worker.run: |
     #!/bin/bash
     set -x
     
     mkdir -p /root/.ssh
     rm -f /root/.ssh/config
     touch /root/.ssh/config

     if [[ "$USESECRETS" == "true" ]];then
        set +e
        yes | cp /etc/secret-volume/id_rsa /root/.ssh/id_rsa
        yes | cp /etc/secret-volume/authorized_keys /root/.ssh/authorized_keys
        set -e
     fi

     if [ -n "$SSHPORT" ]; then
        echo "Port $SSHPORT" > /root/.ssh/config
        sed -i "s/^Port.*/Port $SSHPORT /g" /etc/ssh/sshd_config
     fi
     echo "StrictHostKeyChecking no" >> /root/.ssh/config

     /usr/sbin/sshd -D
---
# Source: horovod/templates/job-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: punk-lemur-horovod-master
  labels:
    app: horovod
    chart: horovod-0.2.0
    release: punk-lemur
    heritage: Tiller
spec:
  clusterIP: None
  ports:
  - name: ssh 
    port: 22
    targetPort: 22
  selector:
    app: horovod
    release: punk-lemur
    role: master
---
# Source: horovod/templates/statefulset-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: punk-lemur-horovod
  labels:
    app: horovod
    chart: horovod-0.2.0
    release: punk-lemur
    heritage: Tiller
spec:
  clusterIP: None
  ports:
  - name: ssh 
    port: 22
    targetPort: 22
  selector:
    app: horovod
    release: punk-lemur
    role: worker
---
# Source: horovod/templates/statefulset.yaml
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: punk-lemur-horovod
  labels:
    app: horovod
    chart: horovod-0.2.0
    release: punk-lemur
    heritage: Tiller
    role: worker
spec:
  selector:
    matchLabels:
      app: horovod
      chart: horovod-0.2.0
      release: punk-lemur
      heritage: Tiller
      role: worker
  serviceName: punk-lemur-horovod
  podManagementPolicy: Parallel
  replicas: 3
  template:
    metadata:
      labels:
        app: horovod
        chart: horovod-0.2.0
        release: punk-lemur
        heritage: Tiller
        role: worker
    spec:
      volumes:
      - name: punk-lemur-horovod-cm
        configMap:
          name: punk-lemur-horovod
          items:
          - key: hostfile.config
            path: hostfile
            mode: 438
          - key: ssh.readiness
            path: check.sh
            mode: 365
          - key: worker.run
            path: run.sh
            mode: 365
      containers:
      - name: worker
        image: "uber/horovod:0.12.1-tf1.8.0-py3.5"
        imagePullPolicy: IfNotPresent
        env:
        - name: SSHPORT
          value: "22"
        ports:
        - containerPort: 22
        volumeMounts:
        - name: punk-lemur-horovod-cm
          mountPath: /horovod/generated
        command: 
        - /horovod/generated/run.sh
        resources:
          {}
---
# Source: horovod/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: punk-lemur-horovod
  labels:
    app: horovod
    chart: horovod-0.2.0
    release: punk-lemur
    heritage: Tiller
    role: master
spec:
  template:
    metadata:
      labels:
        app: horovod
        release: punk-lemur
        role: master
    spec:
      restartPolicy: OnFailure
      volumes:
      - name: punk-lemur-horovod-cm
        configMap:
          name: punk-lemur-horovod
          items:
          - key: hostfile.config
            path: hostfile
            mode: 438
          - key: master.waitWorkerReady
            path: waitWorkersReady.sh
            mode: 365
          - key: master.run
            path: run.sh
            mode: 365
      containers:
      - name: horovod-master
        image: "uber/horovod:0.12.1-tf1.8.0-py3.5"
        imagePullPolicy: IfNotPresent
        env:
         - name: SSHPORT
           value: "22"
        ports:
        - containerPort: 22
        volumeMounts:
        - name: punk-lemur-horovod-cm
          mountPath: /horovod/generated
        command: 
        - /horovod/generated/run.sh
        args:
          null
                   
        resources:
          {}
