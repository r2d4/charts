[debug] Created tunnel using local port: '44593'

[debug] SERVER: "127.0.0.1:44593"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/ipfs

NAME:   looming-parrot
REVISION: 1
RELEASED: Sat Jun  2 15:00:20 2018
CHART: ipfs-0.2.2
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
image: ipfs/go-ipfs:v0.4.9
persistence:
  accessModes:
  - ReadWriteOnce
  enabled: true
  size: 8Gi
replicaCount: 1
resources: {}
service:
  type: ClusterIP

HOOKS:
MANIFEST:

---
# Source: ipfs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: looming-parrot-ipfs
  labels:
    app: ipfs
    chart: ipfs-0.2.2
    heritage: Tiller
    release: looming-parrot
spec:
  type: ClusterIP
  ports:
  - port: 5001
    targetPort: 5001
    protocol: TCP
    name: api
  - port: 8080
    targetPort: 8080
    name: gateway
  selector:
    app: ipfs
    release: looming-parrot
---
# Source: ipfs/templates/statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: looming-parrot-ipfs
  labels:
    app: ipfs
    chart: ipfs-0.2.2
    heritage: Tiller
    release: looming-parrot
spec:
  replicas: 1
  serviceName: looming-parrot-ipfs
  template:
    metadata:
      labels:
        app: ipfs
        chart: ipfs-0.2.2
        heritage: Tiller
        release: looming-parrot
    spec:
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: ipfs
        image: ipfs/go-ipfs:v0.4.9
        ports:
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
          - name: ipfs-storage
            mountPath: /data/ipfs
        resources:
          {}
          
  volumeClaimTemplates:
    - metadata:
        name: ipfs-storage
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
