[debug] Created tunnel using local port: '44589'

[debug] SERVER: "127.0.0.1:44589"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/ethereum

NAME:   exegetical-squid
REVISION: 1
RELEASED: Sat Jun  2 15:00:17 2018
CHART: ethereum-0.1.1
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
bootnode:
  image:
    repository: ethereum/client-go
    tag: alltools-v1.7.3
ethstats:
  image:
    repository: ethereumex/eth-stats-dashboard
    tag: v0.0.1
  service:
    type: LoadBalancer
  webSocketSecret: my-secret-for-connecting-to-ethstats
geth:
  account:
    address: null
    privateKey: null
    secret: null
  genesis:
    difficulty: "0x0400"
    gasLimit: "0x8000000"
    networkId: 98052
  image:
    repository: ethereum/client-go
    tag: v1.7.3
  miner:
    replicaCount: 3
  tx:
    replicaCount: 2
    service:
      type: ClusterIP
imagePullPolicy: IfNotPresent

HOOKS:
MANIFEST:

---
# Source: ethereum/templates/ethstats.secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: exegetical-squid-ethereum-ethstats
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
type: Opaque
data:
  WS_SECRET: "bXktc2VjcmV0LWZvci1jb25uZWN0aW5nLXRvLWV0aHN0YXRz"
---
# Source: ethereum/templates/geth-account.secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: exegetical-squid-ethereum-geth-account
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
type: Opaque
data:
---
# Source: ethereum/templates/geth.configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: exegetical-squid-ethereum-geth-config
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
data:
  networkid: "98052"
  genesis.json: |-
    {
        "config": {
            "chainId": 98052,
            "homesteadBlock": 0,
            "eip150Block": 0,
            "eip155Block": 0,
            "eip158Block": 0
        },
        "difficulty":  "0x0400",
        "gasLimit": "0x8000000",
        "alloc": {
        }
    }
---
# Source: ethereum/templates/bootnode.service.yaml
apiVersion: v1
kind: Service
metadata:
  name: exegetical-squid-ethereum-bootnode
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: bootnode
spec:
  selector:
    app: ethereum
    release: exegetical-squid
    component: bootnode
  clusterIP: None
  ports:
  - name: discovery
    port: 30301
    protocol: UDP
  - name: http
    port: 80
---
# Source: ethereum/templates/ethstats.service.yaml
kind: Service
apiVersion: v1
metadata:
  name: exegetical-squid-ethereum-ethstats
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: ethstats
spec:
  selector:
    app: ethereum
    release: exegetical-squid
    component: ethstats
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
---
# Source: ethereum/templates/geth-tx.service.yaml
kind: Service
apiVersion: v1
metadata:
  name: exegetical-squid-ethereum-geth-tx
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: geth-tx
spec:
  selector:
    app: ethereum
    release: exegetical-squid
    component: geth-tx
  type: ClusterIP
  sessionAffinity: ClientIP
  ports:
  - name: rpc
    port: 8545
  - name: ws
    port: 8546
---
# Source: ethereum/templates/bootnode.deployment.yaml
apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: exegetical-squid-ethereum-bootnode
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: bootnode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ethereum
      release: exegetical-squid
      component: bootnode
  template:
    metadata:
      labels:
        app: ethereum
        release: exegetical-squid
        component: bootnode
    spec:
      containers:
      - name: bootnode
        image: ethereum/client-go:alltools-v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "bootnode --nodekey=/etc/bootnode/node.key --verbosity=4"
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
        ports:
        - name: discovery
          containerPort: 30301
          protocol: UDP
      - name: bootnode-server
        image: ethereum/client-go:alltools-v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "while [ 1 ]; do echo -e \"HTTP/1.1 200 OK\n\nenode://$(bootnode -writeaddress --nodekey=/etc/bootnode/node.key)@$(POD_IP):30301\" | nc -l -v -p 80 || break; done;"
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 80
      initContainers:
      - name: genkey
        image: ethereum/client-go:alltools-v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "bootnode --genkey=/etc/bootnode/node.key"
        volumeMounts:
        - name: data
          mountPath: /etc/bootnode
      volumes:
      - name: data
        emptyDir: {}
---
# Source: ethereum/templates/ethstats.deployment.yaml
apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: exegetical-squid-ethereum-ethstats
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: ethstats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ethereum
      release: exegetical-squid
      component: ethstats
  template:
    metadata:
      labels:
        app: ethereum
        release: exegetical-squid
        component: ethstats
    spec:
      containers:
      - name: ethstats
        image: ethereumex/eth-stats-dashboard:v0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: WS_SECRET
          valueFrom:
            secretKeyRef:
              name: exegetical-squid-ethereum-ethstats
              key: WS_SECRET
---
# Source: ethereum/templates/geth-miner.deployment.yaml
apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: exegetical-squid-ethereum-geth-miner
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: geth-miner
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ethereum
      release: exegetical-squid
      component: geth-miner
  template:
    metadata:
      labels:
        app: ethereum
        release: exegetical-squid
        component: geth-miner
    spec:
      containers:
      - name: geth-miner
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --mine --etherbase=0 --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5"
        env:
        - name: ETHSTATS_SVC
          value: exegetical-squid-ethereum-ethstats.default
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: exegetical-squid-ethereum-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: exegetical-squid-ethereum-geth-config
              key: networkid
        ports:
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: import-geth-account
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth account import --password /root/.ethereum/account/accountSecret /root/.ethereum/account/accountPrivateKey"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: account
          readOnly: true
          mountPath: /root/.ethereum/account
      - name: get-bootnodes
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
          apk add --no-cache curl; 
          CNT=0;
          echo "retreiving bootnodes from $BOOTNODE_SVC"
          while [ $CNT -le 90 ] 
          do
            curl -m 5 -s $BOOTNODE_SVC | xargs echo -n >> /geth/bootnodes;
            if [ -s /geth/bootnodes ] 
            then
              cat /geth/bootnodes;
              exit 0;
            fi;
          
            echo "no bootnodes found. retrying $CNT..."; 
            sleep 2 || break;
            CNT=$((CNT+1));
          done;
          echo "WARNING. unable to find bootnodes. continuing but geth may not be able to find any peers.";
          exit 0;
        env:
        - name: BOOTNODE_SVC
          value: exegetical-squid-ethereum-bootnode.default
        volumeMounts:
        - name: data
          mountPath: /geth
      volumes:
      - name: data
        emptyDir: {}
      - name: config 
        configMap:
          name: exegetical-squid-ethereum-geth-config
      - name: account
        secret:
          secretName: exegetical-squid-ethereum-geth-account
---
# Source: ethereum/templates/geth-tx.deployment.yaml
apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: exegetical-squid-ethereum-geth-tx
  labels:
    app: ethereum
    chart: ethereum-0.1.1
    release: exegetical-squid
    heritage: Tiller
    component: geth-tx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ethereum
      release: exegetical-squid
      component: geth-tx
  template:
    metadata:
      labels:
        app: ethereum
        release: exegetical-squid
        component: geth-tx
    spec:
      containers:
      - name: geth-tx
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --rpc --rpcaddr 0.0.0.0 --rpcapi=eth,net,web3 --rpccorsdomain='*' --ws --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5"
        env:
        - name: ETHSTATS_SVC
          value: exegetical-squid-ethereum-ethstats.default
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: exegetical-squid-ethereum-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: exegetical-squid-ethereum-geth-config
              key: networkid
        ports:
        - name: rpc
          containerPort: 8545
        - name: ws
          containerPort: 8546
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: import-geth-account
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth account import --password /root/.ethereum/account/accountSecret /root/.ethereum/account/accountPrivateKey"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: account
          readOnly: true
          mountPath: /root/.ethereum/account
      - name: get-bootnodes
        image: ethereum/client-go:v1.7.3
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
          apk add --no-cache curl; 
          CNT=0;
          echo "retreiving bootnodes from $BOOTNODE_SVC"
          while [ $CNT -le 90 ] 
          do
            curl -m 5 -s $BOOTNODE_SVC | xargs echo -n >> /geth/bootnodes;
            if [ -s /geth/bootnodes ] 
            then
              cat /geth/bootnodes;
              exit 0;
            fi;
          
            echo "no bootnodes found. retrying $CNT..."; 
            sleep 2 || break;
            CNT=$((CNT+1));
          done;
          echo "WARNING. unable to find bootnodes. continuing but geth may not be able to find any peers.";
          exit 0;
        env:
        - name: BOOTNODE_SVC
          value: exegetical-squid-ethereum-bootnode.default
        volumeMounts:
        - name: data
          mountPath: /geth
      volumes:
      - name: data
        emptyDir: {}
      - name: config 
        configMap:
          name: exegetical-squid-ethereum-geth-config
      - name: account
        secret:
          secretName: exegetical-squid-ethereum-geth-account
