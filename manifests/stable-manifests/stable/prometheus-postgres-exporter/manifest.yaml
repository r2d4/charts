
---
# Source: prometheus-postgres-exporter/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: coiling-crab-prometheus-postgres-exporter
  labels:
    app: prometheus-postgres-exporter
    chart: prometheus-postgres-exporter-0.1.3
    heritage: Tiller
    release: coiling-crab
type: Opaque
data:
  data_source_name: "cG9zdGdyZXNxbDovLyUhcyg8bmlsPik6JSFzKDxuaWw+KUAlIXMoPG5pbD4pOjU0MzIvP3NzbG1vZGU9ZGlzYWJsZQ=="
---
# Source: prometheus-postgres-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: coiling-crab-prometheus-postgres-exporter
  labels:
    app: prometheus-postgres-exporter
    chart: prometheus-postgres-exporter-0.1.3
    release: coiling-crab
    heritage: Tiller
data:
  config.yaml: |
    pg_replication:
      query: "SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))::INT as lag"
      metrics:
        - lag:
            usage: "GAUGE"
            description: "Replication lag behind master in seconds"
    
    pg_postmaster:
      query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"
      metrics:
        - start_time_seconds:
            usage: "GAUGE"
            description: "Time at which postmaster started"
    
    pg_stat_user_tables:
      query: "SELECT schemaname, relname, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del, n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze, last_vacuum, last_autovacuum, last_analyze, last_autoanalyze, vacuum_count, autovacuum_count, analyze_count, autoanalyze_count FROM pg_stat_user_tables"
      metrics:
        - schemaname:
            usage: "LABEL"
            description: "Name of the schema that this table is in"
        - relname:
            usage: "LABEL"
            description: "Name of this table"
        - seq_scan:
            usage: "COUNTER"
            description: "Number of sequential scans initiated on this table"
        - seq_tup_read:
            usage: "COUNTER"
            description: "Number of live rows fetched by sequential scans"
        - idx_scan:
            usage: "COUNTER"
            description: "Number of index scans initiated on this table"
        - idx_tup_fetch:
            usage: "COUNTER"
            description: "Number of live rows fetched by index scans"
        - n_tup_ins:
            usage: "COUNTER"
            description: "Number of rows inserted"
        - n_tup_upd:
            usage: "COUNTER"
            description: "Number of rows updated"
        - n_tup_del:
            usage: "COUNTER"
            description: "Number of rows deleted"
        - n_tup_hot_upd:
            usage: "COUNTER"
            description: "Number of rows HOT updated (i.e., with no separate index update required)"
        - n_live_tup:
            usage: "GAUGE"
            description: "Estimated number of live rows"
        - n_dead_tup:
            usage: "GAUGE"
            description: "Estimated number of dead rows"
        - n_mod_since_analyze:
            usage: "GAUGE"
            description: "Estimated number of rows changed since last analyze"
        - last_vacuum:
            usage: "GAUGE"
            description: "Last time at which this table was manually vacuumed (not counting VACUUM FULL)"
        - last_autovacuum:
            usage: "GAUGE"
            description: "Last time at which this table was vacuumed by the autovacuum daemon"
        - last_analyze:
            usage: "GAUGE"
            description: "Last time at which this table was manually analyzed"
        - last_autoanalyze:
            usage: "GAUGE"
            description: "Last time at which this table was analyzed by the autovacuum daemon"
        - vacuum_count:
            usage: "COUNTER"
            description: "Number of times this table has been manually vacuumed (not counting VACUUM FULL)"
        - autovacuum_count:
            usage: "COUNTER"
            description: "Number of times this table has been vacuumed by the autovacuum daemon"
        - analyze_count:
            usage: "COUNTER"
            description: "Number of times this table has been manually analyzed"
        - autoanalyze_count:
            usage: "COUNTER"
            description: "Number of times this table has been analyzed by the autovacuum daemon"
    
    pg_database:
      query: " SELECT pg_database.datname, pg_database_size(pg_database.datname) as size FROM pg_database"
      metrics:
        - datname:
            usage: "LABEL"
            description: "Name of the database"
        - size:
            usage: "GAUGE"
            description: "Disk space used by the database"
---
# Source: prometheus-postgres-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coiling-crab-prometheus-postgres-exporter
  labels:
    app: prometheus-postgres-exporter
    chart: prometheus-postgres-exporter-0.1.3    
    release: "coiling-crab"
    heritage: "Tiller"
---
# Source: prometheus-postgres-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: coiling-crab-prometheus-postgres-exporter
  labels:
    app: prometheus-postgres-exporter
    chart: prometheus-postgres-exporter-0.1.3
    release: coiling-crab
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9187
      protocol: TCP
      name: http
  selector:
    app: prometheus-postgres-exporter
    release: coiling-crab
---
# Source: prometheus-postgres-exporter/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: coiling-crab-prometheus-postgres-exporter
  labels:
    app: prometheus-postgres-exporter
    chart: prometheus-postgres-exporter-0.1.3
    release: coiling-crab
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-postgres-exporter
      release: coiling-crab
  template:
    metadata:
      labels:
        app: prometheus-postgres-exporter
        release: coiling-crab
      annotations:
        checksum/config: 6a72a8b880ada62a8b5b8f0bd4f99e20d300ce8bc85b23433d7f7da041a25add
    spec:
      serviceAccountName: coiling-crab-prometheus-postgres-exporter
      containers:
        - name: prometheus-postgres-exporter
          args:
          - "--extend.query-path=/etc/config.yaml"
          env:          
            - name: DATA_SOURCE_NAME
              valueFrom:
                secretKeyRef:
                  key: data_source_name
                  name: coiling-crab-prometheus-postgres-exporter
          image: "wrouesnel/postgres_exporter:v0.4.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9187
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
            
          volumeMounts:
            - name: queries
              mountPath: /etc/config.yaml
              subPath: config.yaml
      volumes:
      - configMap:
          defaultMode: 420
          name: coiling-crab-prometheus-postgres-exporter
        name: queries
