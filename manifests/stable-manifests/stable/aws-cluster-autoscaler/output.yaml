[debug] Created tunnel using local port: '44849'

[debug] SERVER: "127.0.0.1:44849"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/aws-cluster-autoscaler

NAME:   hardy-molly
REVISION: 1
RELEASED: Sat Jun  2 15:00:14 2018
CHART: aws-cluster-autoscaler-0.3.3
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
autoscalingGroups: []
awsRegion: us-east-1
extraArgs: {}
image:
  pullPolicy: IfNotPresent
  repository: k8s.gcr.io/cluster-autoscaler
  tag: v0.6.1
nodeSelector: {}
podAnnotations: {}
replicaCount: 1
resources: {}
scaleDownDelay: 10m
service:
  annotations: {}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  servicePort: 8085
  type: ClusterIP
skipNodes:
  withLocalStorage: false
  withSystemPods: true

HOOKS:
MANIFEST:

---
# Source: aws-cluster-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aws-cluster-autoscaler
    chart: aws-cluster-autoscaler-0.3.3
    heritage: Tiller
    release: hardy-molly
  name: hardy-molly-aws-cluster-autoscaler
spec:
  clusterIP: ""
  ports:
    - port: 8085
      protocol: TCP
      targetPort: 8085
  selector:
    app: aws-cluster-autoscaler
    release: hardy-molly
  type: "ClusterIP"
---
# Source: aws-cluster-autoscaler/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: aws-cluster-autoscaler
    chart: aws-cluster-autoscaler-0.3.3
    heritage: Tiller
    release: hardy-molly
  name: hardy-molly-aws-cluster-autoscaler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: aws-cluster-autoscaler
        release: hardy-molly
    spec:
      containers:
        - name: aws-cluster-autoscaler
          image: "k8s.gcr.io/cluster-autoscaler:v0.6.1"
          imagePullPolicy: "IfNotPresent"
          command:
            - ./cluster-autoscaler
            - --cloud-provider=aws
            - --scale-down-delay=10m
            - --skip-nodes-with-local-storage=false
            - --skip-nodes-with-system-pods=true
            - --v=4
          env:
            - name: AWS_REGION
              value: "us-east-1"
          ports:
            - containerPort: 8085
          resources:
            {}
            
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
      volumes:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
