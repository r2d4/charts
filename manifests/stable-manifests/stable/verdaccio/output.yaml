[debug] Created tunnel using local port: '38149'

[debug] SERVER: "127.0.0.1:38149"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/verdaccio

NAME:   honorary-gnat
REVISION: 1
RELEASED: Sat Jun  2 15:00:38 2018
CHART: verdaccio-0.2.3
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
configMap: |
  # This is the config file used for the docker images.
  # It allows all users to do anything, so don't use it on production systems.
  #
  # Do not configure host and port under `listen` in this file
  # as it will be ignored when using docker.
  # see https://github.com/verdaccio/verdaccio/blob/master/wiki/docker.md#docker-and-custom-port-configuration
  #
  # Look here for more config file examples:
  # https://github.com/verdaccio/verdaccio/tree/master/conf
  #

  # path to a directory with all packages
  storage: /verdaccio/storage/data

  auth:
    htpasswd:
      file: /verdaccio/storage/htpasswd
      # Maximum amount of users allowed to register, defaults to "+infinity".
      # You can set this to -1 to disable registration.
      #max_users: 1000

  # a list of other known repositories we can talk to
  uplinks:
    npmjs:
      url: https://registry.npmjs.org/

  packages:
    '@*/*':
      # scoped packages
      access: $all
      publish: $authenticated
      proxy: npmjs

    '**':
      # allow all users (including non-authenticated users) to read and
      # publish all packages
      #
      # you can specify usernames/groupnames (depending on your auth plugin)
      # and three keywords: "$all", "$anonymous", "$authenticated"
      access: $all

      # allow all known users to publish packages
      # (anyone can register by default, remember?)
      publish: $authenticated

      # if package is not available locally, proxy requests to 'npmjs' registry
      proxy: npmjs

  # log settings
  logs:
    - {type: stdout, format: pretty, level: http}
    #- {type: file, path: verdaccio.log, level: info}
image:
  pullPolicy: IfNotPresent
  repository: verdaccio/verdaccio
  tag: 2.7.3
ingress:
  enabled: false
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  mounts: null
  size: 8Gi
  volumes: null
podAnnotations: {}
replicaCount: 1
resources: {}
service:
  annotations: {}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  port: 4873
  type: ClusterIP

HOOKS:
MANIFEST:

---
# Source: verdaccio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: honorary-gnat-verdaccio
  labels:
    app: verdaccio
    chart: verdaccio-0.2.3
    release: honorary-gnat
    heritage: Tiller
data:
  config.yaml: |-
    # This is the config file used for the docker images.
    # It allows all users to do anything, so don't use it on production systems.
    #
    # Do not configure host and port under `listen` in this file
    # as it will be ignored when using docker.
    # see https://github.com/verdaccio/verdaccio/blob/master/wiki/docker.md#docker-and-custom-port-configuration
    #
    # Look here for more config file examples:
    # https://github.com/verdaccio/verdaccio/tree/master/conf
    #
    
    # path to a directory with all packages
    storage: /verdaccio/storage/data
    
    auth:
      htpasswd:
        file: /verdaccio/storage/htpasswd
        # Maximum amount of users allowed to register, defaults to "+infinity".
        # You can set this to -1 to disable registration.
        #max_users: 1000
    
    # a list of other known repositories we can talk to
    uplinks:
      npmjs:
        url: https://registry.npmjs.org/
    
    packages:
      '@*/*':
        # scoped packages
        access: $all
        publish: $authenticated
        proxy: npmjs
    
      '**':
        # allow all users (including non-authenticated users) to read and
        # publish all packages
        #
        # you can specify usernames/groupnames (depending on your auth plugin)
        # and three keywords: "$all", "$anonymous", "$authenticated"
        access: $all
    
        # allow all known users to publish packages
        # (anyone can register by default, remember?)
        publish: $authenticated
    
        # if package is not available locally, proxy requests to 'npmjs' registry
        proxy: npmjs
    
    # log settings
    logs:
      - {type: stdout, format: pretty, level: http}
      #- {type: file, path: verdaccio.log, level: info}
---
# Source: verdaccio/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: honorary-gnat-verdaccio
    chart: "verdaccio-0.2.3"
    release: "honorary-gnat"
    heritage: "Tiller"
  name: honorary-gnat-verdaccio
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: verdaccio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: honorary-gnat-verdaccio
  labels:
    app: verdaccio
    chart: verdaccio-0.2.3
    release: honorary-gnat
    heritage: Tiller
spec:
  clusterIP: ""
  ports:
    - port: 4873
      targetPort: 4873
      protocol: TCP
      name: 
  selector:
    app: verdaccio
    release: honorary-gnat
  type: ClusterIP
---
# Source: verdaccio/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: verdaccio
    chart: verdaccio-0.2.3
    heritage: Tiller
    release: honorary-gnat
  name: honorary-gnat-verdaccio
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: d285865453a6807ec8d2abb3089ee7e3a40114bf7d4572e79e8d489ae5f895ba
      labels:
        app: verdaccio
        release: honorary-gnat
    spec:
      containers:
        - name: verdaccio
          image: "verdaccio/verdaccio:2.7.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4873
          livenessProbe:
            httpGet:
              path: /
              port: 4873
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 4873
            initialDelaySeconds: 5
          resources:
            {}
            
          volumeMounts:
            - mountPath: /verdaccio/storage
              name: storage
              readOnly: false
            - mountPath: /verdaccio/conf
              name: config
              readOnly: true
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: 1000
      volumes:
      - name: config
        configMap:
          name: honorary-gnat-verdaccio
      - name: storage
        persistentVolumeClaim:
          claimName: honorary-gnat-verdaccio
