[debug] Created tunnel using local port: '35263'

[debug] SERVER: "127.0.0.1:35263"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/prometheus-cloudwatch-exporter

NAME:   foiled-wildebeest
REVISION: 1
RELEASED: Sat Jun  2 15:00:30 2018
CHART: prometheus-cloudwatch-exporter-0.1.2
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
affinity: {}
aws:
  aws_access_key_id: null
  aws_secret_access_key: null
  region: eu-west-1
  role: null
config: |-
  # This is the default configuration for prometheus-cloudwatch-exporter
  region: eu-west-1
  period_seconds: 240
  metrics:
  - aws_namespace: AWS/ELB
    aws_metric_name: HealthyHostCount
    aws_dimensions: [AvailabilityZone, LoadBalancerName]
    aws_statistics: [Average]

  - aws_namespace: AWS/ELB
    aws_metric_name: UnHealthyHostCount
    aws_dimensions: [AvailabilityZone, LoadBalancerName]
    aws_statistics: [Average]

  - aws_namespace: AWS/ELB
    aws_metric_name: RequestCount
    aws_dimensions: [AvailabilityZone, LoadBalancerName]
    aws_statistics: [Sum]

  - aws_namespace: AWS/ELB
    aws_metric_name: Latency
    aws_dimensions: [AvailabilityZone, LoadBalancerName]
    aws_statistics: [Average]

  - aws_namespace: AWS/ELB
    aws_metric_name: SurgeQueueLength
    aws_dimensions: [AvailabilityZone, LoadBalancerName]
    aws_statistics: [Maximum, Sum]
image:
  pullPolicy: IfNotPresent
  repository: prom/cloudwatch-exporter
  tag: latest
nodeSelector: {}
rbac:
  create: true
replicaCount: 1
resources: {}
service:
  annotations: {}
  port: 80
  targetPort: 9100
  type: ClusterIP
serviceAccount:
  create: true
  name: null
tolerations: []

HOOKS:
MANIFEST:

---
# Source: prometheus-cloudwatch-exporter/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    heritage: Tiller
    release: foiled-wildebeest
type: Opaque
data:
  {}
---
# Source: prometheus-cloudwatch-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    release: foiled-wildebeest
    heritage: Tiller
data:
  config.yaml: |
    # This is the default configuration for prometheus-cloudwatch-exporter
    region: eu-west-1
    period_seconds: 240
    metrics:
    - aws_namespace: AWS/ELB
      aws_metric_name: HealthyHostCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: UnHealthyHostCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: RequestCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Sum]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: Latency
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: SurgeQueueLength
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Maximum, Sum]
---
# Source: prometheus-cloudwatch-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2    
    release: "foiled-wildebeest"
    heritage: "Tiller"
---
# Source: prometheus-cloudwatch-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    release: foiled-wildebeest
    heritage: Tiller
rules:
  - apiGroups: [""]
    resources: ["secrets","configmap"]
    resourceNames: ["foiled-wildebeest-prometheus-cloudwatch-exporter"]
    verbs: ["get"]
---
# Source: prometheus-cloudwatch-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    release: foiled-wildebeest
    heritage: Tiller
subjects:
  - kind: ServiceAccount
    name: foiled-wildebeest-prometheus-cloudwatch-exporter
    namespace: default
roleRef:
  kind: ClusterRole
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  apiGroup: rbac.authorization.k8s.io
---
# Source: prometheus-cloudwatch-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  annotations:
    {}
    
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    release: foiled-wildebeest
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9100
      protocol: TCP
      name: http
  selector:
    app: prometheus-cloudwatch-exporter
    release: foiled-wildebeest
---
# Source: prometheus-cloudwatch-exporter/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: foiled-wildebeest-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.1.2
    release: foiled-wildebeest
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-cloudwatch-exporter
      release: foiled-wildebeest
  template:
    metadata:
      labels:
        app: prometheus-cloudwatch-exporter
        release: foiled-wildebeest
      annotations:
        
        checksum/config: f93eddcef5692ec5dafb4b9fd59c0b97737d0d41a76cc9dfdb5a7d4e84a9ddfe
    spec:
      containers:
        - name: prometheus-cloudwatch-exporter
          command:
            - java
            - -jar
            - /cloudwatch_exporter.jar
            - "9100"
            - /config/config.yaml
          image: "prom/cloudwatch-exporter:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
            
          volumeMounts:
            - name: vol-prometheus-cloudwatch-exporter
              mountPath: /config
      volumes:
      - configMap:
          defaultMode: 420
          name: foiled-wildebeest-prometheus-cloudwatch-exporter
        name: vol-prometheus-cloudwatch-exporter
