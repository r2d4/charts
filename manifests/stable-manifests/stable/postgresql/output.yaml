[debug] Created tunnel using local port: '43089'

[debug] SERVER: "127.0.0.1:43089"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/postgresql

NAME:   washing-pronghorn
REVISION: 1
RELEASED: Sat Jun  2 15:00:30 2018
CHART: postgresql-0.13.1
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
affinity: {}
deploymentAnnotations: {}
image: postgres
imageTag: 9.6.2
metrics:
  enabled: false
  image: wrouesnel/postgres_exporter
  imagePullPolicy: IfNotPresent
  imageTag: v0.1.1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
networkPolicy:
  allowExternal: true
  enabled: false
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  mountPath: /var/lib/postgresql/data/pgdata
  size: 8Gi
  subPath: postgresql-db
podAnnotations: {}
resources:
  requests:
    cpu: 100m
    memory: 256Mi
service:
  externalIPs: []
  port: 5432
  type: ClusterIP
tolerations: []
usePasswordFile: false

HOOKS:
MANIFEST:

---
# Source: postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: washing-pronghorn-postgresql
  labels:
    app: postgresql
    chart: postgresql-0.13.1
    release: washing-pronghorn
    heritage: Tiller
type: Opaque
data:
  
  postgres-password: "VmptaE9oZ29yMA=="
---
# Source: postgresql/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: washing-pronghorn-postgresql
  labels:
    app: postgresql
    chart: postgresql-0.13.1
    release: washing-pronghorn
    heritage: Tiller
data:
---
# Source: postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: washing-pronghorn-postgresql
  labels:
    app: postgresql
    chart: postgresql-0.13.1
    release: washing-pronghorn
    heritage: Tiller
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: washing-pronghorn-postgresql
  labels:
    app: postgresql
    chart: postgresql-0.13.1
    release: washing-pronghorn
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: washing-pronghorn
---
# Source: postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: washing-pronghorn-postgresql
  labels:
    app: postgresql
    chart: postgresql-0.13.1
    release: washing-pronghorn
    heritage: Tiller
spec:
  template:
  selector:
    matchLabels:
      app: postgresql
      release: washing-pronghorn
  template:
    metadata:
      labels:
        app: postgresql
        release: washing-pronghorn
    spec:
      containers:
      - name: washing-pronghorn-postgresql
        image: "postgres:9.6.2"
        imagePullPolicy: ""
        args:
        env:
        - name: POSTGRES_USER
          value: "postgres"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "postgres"
        - name: POSTGRES_DB
          value: ""
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: washing-pronghorn-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: washing-pronghorn-postgresql
