[debug] Created tunnel using local port: '33741'

[debug] SERVER: "127.0.0.1:33741"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/stable/redis-ha

NAME:   vetoed-marmot
REVISION: 1
RELEASED: Sat Jun  2 15:00:32 2018
CHART: redis-ha-2.1.3
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
auth: false
nodeSelector: {}
rbac:
  create: true
redis_image: quay.io/smile/redis:4.0.8r0
replicas:
  sentinels: 3
  servers: 3
resources:
  sentinel:
    limits:
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 200Mi
  server:
    limits:
      memory: 700Mi
    requests:
      cpu: 100m
      memory: 200Mi
servers:
  annotations: {}
  serviceType: ClusterIP
serviceAccount:
  create: true
  name: null
tolerations: []

HOOKS:
---
# vetoed-marmot-redis-ha-master-service-test
apiVersion: v1
kind: Pod
metadata:
  name: vetoed-marmot-redis-ha-master-service-test
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "vetoed-marmot-master-service-test"
    image: quay.io/smile/redis:4.0.8r0
    env:
      - name: REDIS_CHART_PREFIX
        value: vetoed-marmot-redis-ha-
    command:
      - sh
      - -c
      - redis-cli -h ${REDIS_CHART_PREFIX}master-svc info server
  restartPolicy: Never
---
# vetoed-marmot-redis-ha-slave-service-test
apiVersion: v1
kind: Pod
metadata:
  name: vetoed-marmot-redis-ha-slave-service-test
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "vetoed-marmot-slave-service-test"
    image: quay.io/smile/redis:4.0.8r0
    env:
      - name: REDIS_CHART_PREFIX
        value: vetoed-marmot-redis-ha-
    command:
      - sh
      - -c
      - redis-cli -h ${REDIS_CHART_PREFIX}slave-svc info server
  restartPolicy: Never
---
# vetoed-marmot-redis-ha-sentinel-service-test
apiVersion: v1
kind: Pod
metadata:
  name: vetoed-marmot-redis-ha-sentinel-service-test
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "vetoed-marmot-sentinel-service-test"
    image: quay.io/smile/redis:4.0.8r0
    env:
      - name: REDIS_CHART_PREFIX
        value: vetoed-marmot-redis-ha-
    command:
      - sh
      - -c
      - redis-cli -h ${REDIS_CHART_PREFIX}sentinel -p 26379 info server
  restartPolicy: Never
MANIFEST:

---
# Source: redis-ha/templates/redis-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vetoed-marmot-redis-ha
  labels:
    app: "redis-ha"
    chart: redis-ha-2.1.3
    heritage: Tiller
    release: vetoed-marmot
---
# Source: redis-ha/templates/redis-role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: vetoed-marmot-redis-ha
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
rules:
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - get
    - list
    - patch
---
# Source: redis-ha/templates/redis-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: vetoed-marmot-redis-ha
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vetoed-marmot-redis-ha
subjects:
- kind: ServiceAccount
  name: vetoed-marmot-redis-ha
---
# Source: redis-ha/templates/redis-master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vetoed-marmot-redis-ha-master-svc
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
  annotations:
    {}
    
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis-ha
    release: "vetoed-marmot"
    redis-node: "true"
    redis-role: "master"
  type: "ClusterIP"
---
# Source: redis-ha/templates/redis-sentinel-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vetoed-marmot-redis-ha-sentinel
  labels:
    name: redis-ha-sentinel-svc
    role: service
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
spec:
  ports:
    - port: 26379
      targetPort: 26379
  selector:
    app: redis-ha
    release: "vetoed-marmot"
    redis-role: "sentinel"
---
# Source: redis-ha/templates/redis-slave-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vetoed-marmot-redis-ha-slave-svc
  labels:
    role: service
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
  annotations:
    {}
    
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis-ha
    release: "vetoed-marmot"
    redis-node: "true"
    redis-role: "slave"
  type: "ClusterIP"
---
# Source: redis-ha/templates/redis-sentinel-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: vetoed-marmot-redis-ha-sentinel
  labels:
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: redis-ha
        release: vetoed-marmot
        component: sentinel
        name: vetoed-marmot-redis-ha-sentinel
    spec:
      serviceAccountName: vetoed-marmot-redis-ha
      containers:
      - name: sentinel
        image: quay.io/smile/redis:4.0.8r0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
          
        env:
          - name: SENTINEL
            value: "true"
          - name: REDIS_CHART_PREFIX
            value: vetoed-marmot-redis-ha-
        ports:
          - containerPort: 26379
---
# Source: redis-ha/templates/redis-server-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
  name: vetoed-marmot-redis-ha-server
  labels:
    name: vetoed-marmot-redis-ha-server
    redis-node: "true"
    app: redis-ha
    heritage: "Tiller"
    release: "vetoed-marmot"
    chart: redis-ha-2.1.3
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: redis-ha
        release: vetoed-marmot
        component: server
        name: vetoed-marmot-redis-ha-server
        redis-node: "true"
    spec:
      serviceAccountName: vetoed-marmot-redis-ha
      containers:
      - name: redis
        image: quay.io/smile/redis:4.0.8r0
        resources:
          limits:
            memory: 700Mi
          requests:
            cpu: 100m
            memory: 200Mi
          
        env:
          - name: REDIS_SENTINEL_SERVICE_HOST
            value: "redis-sentinel"
          - name: REDIS_CHART_PREFIX
            value: vetoed-marmot-redis-ha-
        ports:
          - containerPort: 6379
        volumeMounts:
          - mountPath: /redis-master-data
            name: data
      volumes:
      - name: data
