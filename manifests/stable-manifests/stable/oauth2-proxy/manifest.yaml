
---
# Source: oauth2-proxy/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.4.1
    heritage: Tiller
    release: giggly-fish
  name: giggly-fish-oauth2-proxy
type: Opaque
data:
  cookie-secret: "WFhYWFhYWFhYWA=="
  client-secret: "WFhYWFhYWFg="
  client-id: "WFhYWFhYWA=="
---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.4.1
    release: giggly-fish
    heritage: Tiller
  name: giggly-fish-oauth2-proxy
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: oauth2-proxy
    release: giggly-fish
---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.4.1
    heritage: Tiller
    release: giggly-fish
  name: giggly-fish-oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
      release: giggly-fish
  template:
    metadata:
      labels:
        app: oauth2-proxy
        release: "giggly-fish"
    spec:
      containers:
      - name: oauth2-proxy
        image: "a5huynh/oauth2_proxy:2.2"
        imagePullPolicy: IfNotPresent
        args:
          - --email-domain=*
          - --http-address=0.0.0.0:4180
          - --upstream=file:///dev/null
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name:  giggly-fish-oauth2-proxy
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name:  giggly-fish-oauth2-proxy
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name:  giggly-fish-oauth2-proxy
              key: cookie-secret
        ports:
          - containerPort: 4180
            name: http
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        resources:
          {}
          
      tolerations:
        []
