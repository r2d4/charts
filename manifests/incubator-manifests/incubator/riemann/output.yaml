[debug] Created tunnel using local port: '42965'

[debug] SERVER: "127.0.0.1:42965"

[debug] Original chart version: ""
[debug] CHART PATH: /home/matt/go/src/k8s.io/charts/incubator/riemann

NAME:   ordered-newt
REVISION: 1
RELEASED: Sat Jun  2 14:59:00 2018
CHART: riemann-0.1.2
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
image:
  pullPolicy: IfNotPresent
  repository: raykrueger/riemann
  tag: 0.2.14
replicaCount: 1
resources: {}
riemann:
  config: |
    ;Init Logging
    (logging/init {:console true})

    ; Listen on the local interface over TCP (5555), UDP (5555), and websockets
    ; (5556)
    (let [host "0.0.0.0"]
      (tcp-server {:host host})
      (udp-server {:host host})
      (ws-server  {:host host}))

    ; Expire old events from the index every 5 seconds.
    (periodically-expire 5 {:keep-keys [:host :service :tags]})

    (let [index (index)]
      ; Inbound events will be passed to these streams:
      (streams
        (default :ttl 60
          ; Index all events immediately.
          index
          #(info %)
    )))
service:
  ports:
    tcp: 5555
    udp: 5555
    websocket: 5556
  type: ClusterIP

HOOKS:
MANIFEST:

---
# Source: riemann/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ordered-newt-riemann
  labels:
    app: riemann
    chart: riemann-0.1.2
    release: ordered-newt
    heritage: Tiller
data:
  riemann.config: |
    ;Init Logging
    (logging/init {:console true})
    
    ; Listen on the local interface over TCP (5555), UDP (5555), and websockets
    ; (5556)
    (let [host "0.0.0.0"]
      (tcp-server {:host host})
      (udp-server {:host host})
      (ws-server  {:host host}))
    
    ; Expire old events from the index every 5 seconds.
    (periodically-expire 5 {:keep-keys [:host :service :tags]})
    
    (let [index (index)]
      ; Inbound events will be passed to these streams:
      (streams
        (default :ttl 60
          ; Index all events immediately.
          index
          #(info %)
    )))
---
# Source: riemann/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ordered-newt-riemann
  labels:
    app: riemann
    chart: riemann-0.1.2
    release: ordered-newt
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - name: riemann-tcp
    port: 5555
    targetPort: riemann-tcp
    protocol: TCP
  - name: riemann-udp
    port: 5555
    targetPort: riemann-udp
    protocol: UDP
  - name: riemann-ws
    port: 5556
    targetPort: riemann-ws
    protocol: TCP
  selector:
    app: riemann
    release: ordered-newt
---
# Source: riemann/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ordered-newt-riemann
  labels:
    app: riemann
    chart: riemann-0.1.2
    release: ordered-newt
    heritage: Tiller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: riemann
        chart: riemann-0.1.2
        release: ordered-newt
        heritage: Tiller
    spec:
      containers:
      - name: riemann
        image: "raykrueger/riemann:0.2.14"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          tcpSocket:
            port: riemann-tcp
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: riemann-tcp
          initialDelaySeconds: 5
        volumeMounts:
        - name: "ordered-newt-config"
          mountPath: /usr/local/etc/riemann
        ports:
        - name: riemann-tcp
          containerPort: 5555
          protocol: TCP
        - name: riemann-udp
          containerPort: 5555
          protocol: UDP
        - name: riemann-ws
          protocol: TCP
          containerPort: 5556
      volumes:
      - name: "ordered-newt-config"
        configMap:
          name: ordered-newt-riemann
